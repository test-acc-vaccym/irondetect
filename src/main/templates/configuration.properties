# IF-MAP authentication method, valid values are 'cert' and 'basic' 
ifmap.server.auth.method = basic

# IF-MAP connection information
ifmap.server.url.basic = https://localhost:8443
ifmap.server.url.cert = https://localhost:8444
#ifmap.server.url.basic = https://192.168.1.159:7443
#ifmap.server.url.cert = https://192.168.1.159:8444

# Max sizes for results (in bytes)
ifmap.maxresult.size = 100000000

# Authentication information for PDP and Device subscriber
irondetect.pdpsubscriber.user = irondetect-pdp
irondetect.pdpsubscriber.password = irondetect-pdp
irondetect.devicesubscriber.user = irondetect
irondetect.devicesubscriber.password = irondetect
irondetect.statuspublisher.user = irondetect-status
irondetect.statuspublisher.password = irondetect-status

# the path to the keystore
keystore.path = /irondetect.jks

# the keystore password
keystore.password = irondetect

# PDP connection information
irondetect.subscriber.pdp = pdp1

# Irondetect publish status information on this identifier
irondetect.publish.status.identifier = irondetect-status

# Filename of policy
irondetect.policy.filename = /policy/testcases.pol

# Directory for procedure JARs
irondetect.procedure.directory = src/main/templates/procedures

# Directory for training data, stored as a DB4O databases
irondetect.db4o.database = src/main/templates/training-dbsX

# if TRUE, actions will also be published as IF-MAP standard events; if FALSE, they will only be published as 'alert' metadata
irondetect.publisher.actionasifmapevent = true

# if TRUE, actions will be published via PublishNotify; if FALSE, they will be published via PublishUpdate
irondetect.publisher.notify = false

# if TRUE, a minimalistic GUI will be started together with irondetect
irondetect.gui = true

# if TRUE, irondetect publish status informations for subscriber
irondetect.publish.status = true