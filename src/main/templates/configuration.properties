# IF-MAP authentication method, valid values are 'cert' and 'basic' 
ifmap.server.auth.method = basic

# IF-MAP connection information
ifmap.server.url.basic = https://localhost:8443
ifmap.server.url.cert = https://localhost:8444

# Max sizes for results (in bytes)
ifmap.maxresult.size = 100000000

# Authentication information for PDP and Device subscriber
irondetect.pdpsubscriber.user = irondetect-pdp
irondetect.pdpsubscriber.password = irondetect-pdp
irondetect.devicesubscriber.user = irondetect
irondetect.devicesubscriber.password = irondetect
irondetect.PolicyPublisher.user = irondetect-PolicyPublisher
irondetect.PolicyPublisher.password = irondetect-PolicyPublisher

# the path to the keystore
keystore.path = /irondetect.jks

# the keystore password
keystore.password = irondetect

# PDP connection information
irondetect.subscriber.pdp = freeradius-pdp

# Filename of policy
irondetect.policy.filename = /policy/MobileDevicesSzenario.pol

# Directory for procedure JARs
irondetect.procedure.directory = procedures

# Directory for training data, stored as a DB4O databases
irondetect.yaml.trainingdata = training-dbs

# if TRUE, actions will also be published as IF-MAP standard events; if FALSE, they will only be published as 'alert' metadata
irondetect.publisher.actionasifmapevent = false

# if TRUE, actions will be published via PublishNotify; if FALSE, they will be published via PublishUpdate
irondetect.publisher.notify = false

# if TRUE, a minimalistic GUI will be started together with irondetect
irondetect.gui = true

# if TRUE, sends a policy-action metadata always even when no fired rules
irondetect.PolicyPublisher.policyAction.noFiredRules = false

# is the value of the specific start identifier for the policy graph
irondetect.PolicyPublisher.identifier = irondetect-policy